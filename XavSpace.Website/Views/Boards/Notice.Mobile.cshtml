@model XavSpace.Website.ViewModels.Notices.DetailedNoticeViewModel
@{
    ViewBag.Title = Model.Title;
    ViewBag.Description = Model.Description;
    Layout = "~/Views/Shared/_NewsFeedLayout.cshtml";
}
@section head{
    <style>
        .post img {
            width: 100% !important;
        }

        .container img {
            width: 100%;
        }
    </style>
    <meta property="og:title"
          content="@ViewBag.Title" />
    <meta property="og:description" content="@ViewBag.Description">
    <meta property="og:site_name" content="XavSpace" />
    <meta property="og:image" content="~/Content/images/LOGO.png">
}

@*Displays Details of Notices on Mobile devices*@
<div class="body-content">
    <div class="notice-outer-mobile effect6">
        <div style="padding:1em">

            <h2 style="text-align:center"> @Model.Title</h2>
            <h3>@Html.Raw(System.Web.HttpUtility.HtmlDecode(Model.Description))</h3>
            @if (Model.IsOfficial)
            {
                <div class='container-ctm'>
                    <div class="align-left">
                        <h4 style="text-align:left;">@Html.DisplayFor(model => model.DateCreated)</h4>
                    </div>

                    <div class="align-right">
                        <h4 style="text-align:right;">PRINCIPAL</h4>
                    </div>
                </div>
                <br>
                <br>
                <br>
                <br>
            }
            else
            {
                <h4 style="text-align:left;">@Html.DisplayFor(model => model.DateCreated)</h4>
    <br>  

            }
           
            <div class="btn-toolbar">
                <div class="btn-group">
                    <div class="fb-share-button" data-href="@Url.Action("Notice", "Boards", new { id = Model.Id })" data-layout="button"></div>
                </div>
                <div class="btn-group">
                    @if (User.Identity.IsModerator())
                    {
                        using (Html.BeginForm("Delete", "Notices", new { noticeId = Model.Id }, FormMethod.Post, new { @id = "deleteNoticeForm" }))
                        {
                            <a data-toggle="modal" data-target="#confirmDelete" id="hideprint">
                                <i class="glyphicon glyphicon-trash" title="Delete Notice"></i>
                            </a>
                        }
                    }
                </div>
            </div>

        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-12">
        <div class="linkBelloeNotice">
            <p>


                @if (Model.IsOfficial)
                {
                    @Html.ActionLink("Back to Notice Board", "View", new { id = Model.NoticeBoardId })
                }
                else
                {
                    <a href="@Url.Action("View","Unofficial", new { id = Model.NoticeBoardId })"> Back to Notice Board</a>
                }
            </p>

        </div>

    </div>

</div>




<!-- Delete Modal -->

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">

    @Html.AntiForgeryToken()
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                Are you sure you want to delete this Notice?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">
                    Close
                </button>
                <input type="hidden" name="id" id="deleteNoticeId" value="-1" />
                <button class="btn btn-primary" onclick="confirmSelection()">Delete</button>
            </div>
        </div>
    </div>
    }
</div>

<!-- #endregion -->
@section Scripts{
    <script>
        function confirmSelection() {
            document.getElementById("deleteNoticeForm").submit();
        }
      
        function printContent(el) {
            var restorepage = document.body.innerHTML;
            var printcontent = document.getElementById(el).innerHTML;
            document.body.innerHTML = printcontent;
            window.print();
            document.body.innerHTML = restorepage;
        }

        (function (d, s, id) { //facebook sharing
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=1569856776576792&version=v2.0";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
}
