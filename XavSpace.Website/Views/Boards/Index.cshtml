
@model List<XavSpace.Website.ViewModels.Boards.NoticeBoardIndexViewModel>
@using System.Linq
@{
    ViewBag.Title = "Boards";
    bool isMod = User.Identity.IsModerator();
}
<h2>@ViewBag.Title</h2>
@if (isMod)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@*Page where all Notice Boards are displayed*@
    
<div id="updated">
    <div class="body-content">
        <div class="row">
            @foreach (var item in Model)
            {             
                    string s = @Html.DisplayFor(modelItem => item.Title).ToString();
                    <div class="col-lg-3 col-md-4 col-sm-5">
                        <div class="well" style="height:180px;">
                            <h1>
                                <a href="@Url.Action("View", new { id=item.Id })" style="">
                                    @if (s.Contains("Board"))
                                    {
                                        @Html.DisplayFor(modelItem => item.Title, new { @id = "NBTitle" }).ToString().Substring(0, s.IndexOf(' '));
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Title, new { @id = "NBTitle" })
                                    }
                                </a>
                            </h1>
                            @{string des = @Html.DisplayFor(model => item.Description).ToString();}
                            @if (des.Length > 40)
                            {
                                <h4>  @Html.DisplayFor(model => item.Description).ToString().Substring(0, 40)...</h4>
                            }
                            else
                            {
                                <h4>  @Html.DisplayFor(model => item.Description)</h4>
                            }

                            <div class="row">
                                <div class="col-lg-3" style="width:100%">
                                    <div class="btn-toolbar btn-xs">
                                        @if (isMod)
                                        {
                                            <div class="btn-group ">
                                                <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-xs btn-primary">
                                                    <i class="glyphicon glyphicon-pencil" title="Edit Notice Board"></i>
                                                </a>
                                            </div>

                                            <div class="btn-group ">
                                                <button type="button" value="delete" class="btn btn-xs btn-primary" data-toggle="modal" data-target="#confirmDelete" onclick="getID(@item.Id)">
                                                    <i class="glyphicon glyphicon-trash" title="Delete Notice Board"></i>
                                                </button>
                                            </div>
                                        }
                                        
                                        <div class="btn-group ">
                                            @*@if (item.isMandatory)  Still waiting on the isMandatory from back end
                                                {
                                                    <button type="submit" class="btn btn-xs disabled" data-toggle="modal" data-target="#unfollowmodal" title="Mandatory Board, Cannot unfollow"><i class="fa fa-plus"></i> following</button>
                                                }*@
                                            @if (item.IsSubscribed)
                                            {
                                                using (Html.BeginForm("Unsubscribe", "Boards", new { noticeboardId = item.Id }, FormMethod.Post, new { @class = "subscribeForms" }))
                                                {
                                                    <div class="unsubButton">
                                                        <button type="submit" value="Unsubscribe" id="btnSubscribe" class="btn btn-xs btn-delete"><span class="following"><i class="fa fa-check"></i> FOLLOWING</span><span class="unfollow"><i class="fa fa-minus"></i> UNFOLLOW</span></button>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                using (Html.BeginForm("Subscribe", "Boards", new { noticeboardId = item.Id }, FormMethod.Post, new { @class = "subscribeForms" }))
                                                {
                                                    <button type="submit" value="Subscribe" id="btnSubscribe" class="btn btn-xs btn-primary"><i class="fa fa-plus"></i> FOLLOW</button>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                
            }
        </div>
       
    </div>
</div>

@*THE DELETE MODAL*@
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    @using (Html.BeginForm("Delete", "Boards", null, FormMethod.Post, new { @id = "deleteform" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    Are you sure you want to delete this Notice Board?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default"
                            data-dismiss="modal">
                        Close
                    </button>
                    <input type="hidden" name="id" id="deleteFormId" value="-1" />
                    <button class="btn btn-primary" onclick="confirmSubmit()">Delete</button>
                </div>
            </div>
        </div>
    }
</div>
@*THE MANDATORY MODAL*@
<!-- #region Mandatory -->
<div class="modal fade" id="unfollowModal" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                This is a Mandatory Notice Board
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<!-- #endregion -->
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>

        var id = -1;
        function confirmSubmit() {//submits form in modal
            if (id > -1) {
                $('#deleteFormId').val(id);
                document.getElementById("deleteform").submit();
            }
        }

        function getID(i) {//gets id of each noticeboard 
            id = i;
        }

        function subscribe() {              //ajax to load the div to be updated after user follows/unfollows noticeboard
            $(".subscribeForms").on("submit", function (event) {
                event.preventDefault();               
                var url = $(this).attr("action");
                var formData = $(this).serialize();
                console.log(url);
                console.log(formData);
                $.ajax({
                    url: url,
                    type: "POST",
                    data: formData,
                    dataType: "json",
                    success: function (resp) {                       
                        if (resp.status == "success") {                           
                            $('#updated').load(document.URL + " #updated", function () {
                                index = 0;
                                subscribe(".subscribeForms");
                            });
                        }
                        else {
                            alert('Fail');
                        }
                    }
                })
                
            });
        }
        $(document).ready(function () {
            subscribe();
        });

       

    </script>
}
