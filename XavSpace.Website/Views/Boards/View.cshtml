@model XavSpace.Website.ViewModels.Boards.NoticeBoardViewModel

@{
    ViewBag.Title = Model.Title;
}

@{var Title = Html.DisplayFor(model => model.Title); }
<div class="jumbotron">
    <div class="container">
        <div class="col-md-8">
            @if (Title.ToString().Contains("Board"))
            {
                <h1>@Html.DisplayFor(model => model.Title)</h1>
            }
            else
            {
                <h1>@Html.DisplayFor(model => model.Title) Notice Board</h1>
            }
            <h3>@Html.DisplayFor(model => model.Description)</h3>
        </div>
    </div>
</div>


<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div class="btn-toolbar">
                @if (User.Identity.IsStaff()){
                <div class="btn-group">
                    @using (Html.BeginForm("Post", "Boards", new { id = Model.Id }))
                    {
                        <button type="submit" value="Post Notice" class="btn btn-default">Post</button>
                    }
                    
                </div>
                }
                <div class="btn-group" id="mydiv">
                    @if (ViewBag.Subscribed)
                    {
                        using (Html.BeginForm("Unsubscribe", "Boards", new { noticeboardId = Model.Id }, FormMethod.Post, new { @id = "formSubscribe" }))
                        {
                            <button type="submit" value="Unsubscribe" id="btnSubscribe" class="btn btn-delete"><i class="fa fa-minus"></i> UNFOLLOW</button>

                        }
                    }
                    else
                    {
                        using (Html.BeginForm("Subscribe", "Boards", new { noticeboardId = Model.Id }, FormMethod.Post, new { @id = "formSubscribe" }))
                        {
                            <button type="submit" value="Subscribe" id="btnSubscribe" class="btn btn-primary"><i class="fa fa-plus"></i> FOLLOW</button>
                        }
                    }
                    </div>
                </div>
            </div>
    </div>
</div>

<hr />
<div class="body-content">
    @foreach (var notice in Model.Notices)
    {
        if (notice.isHighPriority)
        {
            <div class="well" style="border-color:red">

                <h3>@notice.Title <small><em> - Posted on @Html.DisplayFor(modelItem => notice.DateCreated)</em></small></h3>


                <p> @Html.Raw(System.Web.HttpUtility.HtmlDecode(notice.Description))</p>
                <div class="btn-toolbar">
                    <div class="btn-group">
                        <div class="fb-share-button" data-href="@Url.Action("Notice", "Boards", new { id = notice.Id })" data-layout="button"></div>

                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action("Notice", "Boards", new { id = notice.Id })">
                            <i class="glyphicon glyphicon-list " title="Details"></i>
                        </a>
                    </div>

                    <div class="btn-group">
                        @if (User.Identity.IsModerator())
                        {
                            <a title="Delete Notice" data-toggle="modal" data-target="#confirmDelete" onclick="thirdFunction(@notice.Id)">
                                <i class="glyphicon glyphicon-trash" title="Delete Notice Board"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>

        }
        else
        {
            <div class="well" style="border-color:dodgerblue">

                <h3>@notice.Title <small><em> - Posted on @Html.DisplayFor(modelItem => notice.DateCreated)</em></small></h3>


                <p> @Html.Raw(System.Web.HttpUtility.HtmlDecode(notice.Description))</p>
                <div class="btn-toolbar">
                    <div class="btn-group">
                        <div class="fb-share-button" data-href="@Url.Action("Notice", "Boards", new { id = notice.Id })" data-layout="button"></div>

                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action("Notice", "Boards", new { id = notice.Id })">
                            <i class="glyphicon glyphicon-list " title="Details"></i>
                        </a>
                    </div>

                    <div class="btn-group">
                        @if (User.Identity.IsModerator())
                        {
                            <a title="Delete Notice" data-toggle="modal" data-target="#confirmDelete" onclick="thirdFunction(@notice.Id)">
                                <i class="glyphicon glyphicon-trash" title="Delete Notice Board"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>

        }
    }
</div>

@*THE DELETE MODAL*@
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    @using (Html.BeginForm("Delete", "Notices", null, FormMethod.Post, new { @id = "deleteform" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    Are you sure you want to delete this Notice?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default"
                            data-dismiss="modal">
                        Close
                    </button>
                    <input type="hidden" name="noticeId" id="deleteFormId" value="-1" />
                    <button class="btn btn-primary" onclick="secondFunction()">Delete</button>
                </div>
            </div>
        </div>
    }
</div>
<div id="fb-root"></div>

<p>
    @if (User.Identity.IsModerator())
    {
        @: @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    }
    @Html.ActionLink("Back to Notice Boards", "Index")
</p>

@section scripts{
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery")

    <script>
        var id = -1;
        function secondFunction() {
            if (id > -1) {
                $('#deleteFormId').val(id);
                document.getElementById("deleteform").submit();
            }
        }
        function thirdFunction(i) {
            id = i;
        }

        function subscribe() {
            $("#formSubscribe").on("submit", function (event) {
                event.preventDefault();
                // show some animation 'in progress' animation here
                var url = $(this).attr("action");
                var formData = $(this).serialize();
                console.log(url);
                console.log(formData);
                $.ajax({
                    url: url,
                    type: "POST",
                    data: formData,
                    dataType: "json",
                    success: function (resp) {

                        // stop showing the 'in progress animation' here

                        if (resp.status == "success") {
                            // add some text saying "you're now subscribed to this board" or something like that

                            //alert('success');
                            $('#mydiv').load(document.URL + " #mydiv", function () {
                                subscribe();
                            });
                        }
                        else {
                            alert('fail');
                        }
                    }
                })
            });
        }

    $(document).ready(function () {
        subscribe();
    });

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=1569856776576792&version=v2.0";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
   
    

   

    </script>
}